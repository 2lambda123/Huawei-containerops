# Calico Version v2.3.0
# https://docs.projectcalico.org/v2.3/releases#v2.3.0
# This manifest includes the following component versions:
#   calico/node:v1.3.0
#   calico/cni:v1.9.1
#   calico/kube-policy-controller:v0.6.0

# This ConfigMap is used to configure a self-hosted Calico installation.
kind: ConfigMap
apiVersion: v1
metadata:
  name: calico-config
  namespace: kube-system
data:
  # Configure this with the location of your etcd cluster.
  etcd_endpoints: "https://10.138.48.164:2379,https://10.138.232.252:2379,https://10.138.24.24:2379"

  # Configure the Calico backend to use.
  calico_backend: "bird"

  # The CNI network configuration to install on each node.
  cni_network_config: |-
    {
        "name": "k8s-pod-network",
        "cniVersion": "0.1.0",
        "type": "calico",
        "etcd_endpoints": "__ETCD_ENDPOINTS__",
        "etcd_key_file": "__ETCD_KEY_FILE__",
        "etcd_cert_file": "__ETCD_CERT_FILE__",
        "etcd_ca_cert_file": "__ETCD_CA_CERT_FILE__",
        "log_level": "info",
        "ipam": {
            "type": "calico-ipam"
        },
        "policy": {
            "type": "k8s",
            "k8s_api_root": "https://__KUBERNETES_SERVICE_HOST__:__KUBERNETES_SERVICE_PORT__",
            "k8s_auth_token": "__SERVICEACCOUNT_TOKEN__"
        },
        "kubernetes": {
            "kubeconfig": "__KUBECONFIG_FILEPATH__"
        }
    }

  # If you're using TLS enabled etcd uncomment the following.
  # You must also populate the Secret below with these files.
  etcd_ca: "/calico-secrets/etcd-ca"   # "/calico-secrets/etcd-ca"
  etcd_cert: "/calico-secrets/etcd-cert" # "/calico-secrets/etcd-cert"
  etcd_key: "/calico-secrets/etcd-key"  # "/calico-secrets/etcd-key"

---

# The following contains k8s Secrets for use with a TLS enabled etcd cluster.
# For information on populating Secrets, see http://kubernetes.io/docs/user-guide/secrets/
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: calico-etcd-secrets
  namespace: kube-system
data:
  # Populate the following files with etcd TLS configuration if desired, but leave blank if
  # not using TLS for etcd.
  # This self-hosted install expects three files with the following names.  The values
  # should be base64 encoded strings of the entire contents of each file.
  # etcd-key: null
  # etcd-cert: null
  # etcd-ca: null
  etcd-key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdE51V3l2UnBRNllPd281dFJMVnNqcTdqS3ZQWVlIZ09ESmhYS2FQbXhCVWtBbm5mClUyMmNDdlI4alpGeFFpRS9Zby9XQm82L3lRMGJIMW8zMkVpRXJuZXdGSlJ1MFV1M0h6MXByVWpaek5VS0lxRFQKdWdxbXJQTU1lcjJTV0EvQVphdnRCUHlQNzVHV3Yvd0UwWDhPNklxVVJLMUQ1TDRWU1ErZUtKTEVZcnltNTRrbApveDVkZDFkcjBlY0taTThvTzJGUHcrZlpVTlhmMU43YmhuR0t2Rkh1bDNXZmx6UU5ibVdMUHg2WW1SSTJwaGQ1CjhyR1hxdHoyelpreFpvRTBncXFKWTdrL05UcTFIR1VqUnJGWkU0MmNncUVHeFNkbHU4ZGRxYUpDQjRlSnQrS0sKRWhKUWtFVUxHWk9XVlNibDhVUWw2a0h1M2QwdXlFZE9TSFBuVlFJREFRQUJBb0lCQURkWUp6bnVOelFyWWNMcAp3TWhRMkdxRlhDRHR3OTRwZnVzZHh6YUg0SHRLbU4xbEhCRTBycGF2b0ZuV0V4bVFnUXdSUmdaMXNueTgxUHJ3CktieTIzRnRqWnUrMVNJQWxzbUVOOHdQREVsdGJLaUhVbzFZQUltYzBiVEkyUnMxSjdLOXdRRFRSY041MzUvRFMKRjB0Z25WaE41L2RvS2ltYWZYc0JHMzRCQTdYT3oxODRMSlpLdTFwTmlza25YSGUvTlM2UjBQeGsyeDg0RzVoMwo4ZUFia2d4RnZ0eWxNeFU0OUR4alRnWjZYVnZuaU94TGRHTDlEMzFsMm5GcGZYNmhybGR3TTZIOUVxTmVvUUNxCnp2TDdGN0s0bXdidTF6MGxPdWMyNjI3SW5ZTkJ1R08rQzdnY0NOVFJWbjNwWjVnWnlyNG8xWHRMVmIrdTNHZWkKb01mK3VVRUNnWUVBMzIrdFdiVDN6OWJDaE1zdlFjazJlRDFtRWo3c1l4RVhzdUVFUmxmTWVwRVNTYUh5NGpJaQpxcjVhSHFrYndVaW1FZU9OSGVwUlJWL256NzVpSlNYNVdvRGFjZGVGS3pTZEdHTXlOK2FsUy9wb2p4MFVPa0tVCk04WTFON2tYSVhuMW1pakNnK2dOa2l1MXRqVG9FMkc5TjBwdnpBVEpKSmc1SzR4TnVQT2lVdVVDZ1lFQXp6ZFQKTnZVK2FsVDJ0LzNSb3lxL0FqTnRsTWNSY3dGNUI4L21wMmpwTExhWHhZRW9hendLZ3hzc2FvaWFYTXNScElhawppMXY3Q2VXd2QzbVNzRENwWXFRWlREblpHNFBwZUI5bzYzcmcyOTNML3E5RTJvMDNCT3RGbWdPOXd3QXUzemJQCjNnNEtnRjY4cCtNdGcvcDBRT21ZWmlZblpvMXNOQkVDQS82NXk3RUNnWUVBcml2dzlwL1NHU3J4QVBFZVNtcmUKVWdhU25hQjlScEJaWi9CdUU2TjNXd2ZoT0pMTXNiU2hQM1lZN0JPbzloZDZsVEZMbk1rK1J4VUdyL05ac0ZtVQpzZzhGdVg1bWFaS2U3eGJNVzdVb256eDQ2eTZneVBXRGI0U1BrWHR2NDRHZGlXbENqKzZCUGJOaTk4RHdNOE9aCjZ4TFVhVFpGMFlmejhOVnk5THkraVYwQ2dZQTJTRGYwWGFwTUVKWFEvUnk5c2FUMzNxRUdLRi9aMExqejR2SjUKU0hKTTFFaE41TmZCdjZqQlQ0MERHMlhVaVIzR0M3OXZBbGx3N2txY0Fhejdtc1BFbzFnOUw2cEFHdjQrQ1h4aQpzMzNVR3ZZbGNhU0gzQlpkbzRSSUpGTEJrbnEwM3BiMWhKZ2JxTFdqQlZBWEVyVUJqQy93RW02ZjNzeEpsMnIvCndPckxBUUtCZ0UrVFRWU3lCOGZrUmhrS25xbENQbitjbm5qRHZWQjZ4eXZhNnFzYkVwaWJ2NVZTNERabnJVSHUKYWpId0x0NllIVkFDU0FIWDhkR0cvN2s2azdNUkdLb0J3Rlhua0EwVmpzcmVDbTY4WFI0ZkJCMjNOUUNTWGpNbwpydFpEeS9rdzNmMXFxVTVuRHBpYUhvU3hzeVBjMUhXUllpaVFIUWQ1NytmZUppWFprWTFXCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
  etcd-cert: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQyakNDQXNLZ0F3SUJBZ0lVVVY0OEd1OEYxUDh5TkkwM1ZEdFBXenVkWEFrd0RRWUpLb1pJaHZjTkFRRUwKQlFBd2FqRUxNQWtHQTFVRUJoTUNRMDR4RURBT0JnTlZCQWdUQjBKbGFVcHBibWN4RURBT0JnTlZCQWNUQjBKbAphVXBwYm1jeEREQUtCZ05WQkFvVEEyczRjekVQTUEwR0ExVUVDeE1HVTNsemRHVnRNUmd3RmdZRFZRUURFdzlqCmJIVnpkR1Z5TFhKdmIzUXRZMkV3SGhjTk1UY3dPVEUyTURFd056QXdXaGNOTWpJd09URTFNREV3TnpBd1dqQnQKTVFzd0NRWURWUVFHRXdKRFRqRVFNQTRHQTFVRUNCTUhRbVZwU21sdVp6RVFNQTRHQTFVRUJ4TUhRbVZwU21sdQpaekVNTUFvR0ExVUVDaE1EYXpoek1ROHdEUVlEVlFRTEV3WlRlWE4wWlcweEd6QVpCZ05WQkFNVEVtVjBZMlF0ClkyeHBaVzUwTFdOaGJHbGpiekNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMVGIKbHNyMGFVT21Ec0tPYlVTMWJJNnU0eXJ6MkdCNERneVlWeW1qNXNRVkpBSjUzMU50bkFyMGZJMlJjVUloUDJLUAoxZ2FPdjhrTkd4OWFOOWhJaEs1M3NCU1VidEZMdHg4OWFhMUkyY3pWQ2lLZzA3b0twcXp6REhxOWtsZ1B3R1dyCjdRVDhqKytSbHIvOEJORi9EdWlLbEVTdFErUytGVWtQbmlpU3hHSzhwdWVKSmFNZVhYZFhhOUhuQ21UUEtEdGgKVDhQbjJWRFYzOVRlMjRaeGlyeFI3cGQxbjVjMERXNWxpejhlbUprU05xWVhlZkt4bDZyYzlzMlpNV2FCTklLcQppV081UHpVNnRSeGxJMGF4V1JPTm5JS2hCc1VuWmJ2SFhhbWlRZ2VIaWJmaWloSVNVSkJGQ3htVGxsVW01ZkZFCkplcEI3dDNkTHNoSFRraHo1MVVDQXdFQUFhTjFNSE13RGdZRFZSMFBBUUgvQkFRREFnV2dNQk1HQTFVZEpRUU0KTUFvR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SFFZRFZSME9CQllFRkhDdGRjcEFKckd5aTQzUQo4OFU3dmhDejNiL0FNQjhHQTFVZEl3UVlNQmFBRlBDQVJLZWVWL2ZxM3hicXJPNm96cm5WNkRkU01BMEdDU3FHClNJYjNEUUVCQ3dVQUE0SUJBUUFTbUw4MGRzdDd4WmRyMlZEbGo3Uzc2bXJ4MzRKdVh0MUVOdHRFc3BmVEN4V0EKY0Zveks1dW5YRzNzTUd0UmZZY2Ftd0FDbHNLTk0xVkpjcjM5RHNIc1VtRDM4SXljSkFJZ3FxTDZ3Ylh0NjRNUwpKS1lMSFBpUy8vcEJUdVorcCs4RkdqVVJtN3hHbFExRVg3bUNQbHZ3dzd5bUR1T2NwM2puek1NdVRhY2VpZ1kvCjFuemIvQVdodDdLWGlzWkl2SUhtenliRS8vS3VWay9KanFuSWs2dXlLbDdBV21sT1A4WXAxYmN6bFBuMU1PTUUKZFZpSHRRcXlvUzVaQ3ZpU0U4OUpqN3EwMkVaRVJiNFpTbkNTRmMya3k2R3piK0lKSXdWTlhrYTVZdmR6TnRhdAo3cTQ2dTNwbnhsSHhnVUllaXhZM1haSElRQy9VMWkwSFlHanlIZWpaCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  etcd-ca: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUR5RENDQXJDZ0F3SUJBZ0lVVXJxT3BMQU9nZCs0N1U1ek1wbEpGQkJJTzdrd0RRWUpLb1pJaHZjTkFRRUwKQlFBd2FqRUxNQWtHQTFVRUJoTUNRMDR4RURBT0JnTlZCQWdUQjBKbGFVcHBibWN4RURBT0JnTlZCQWNUQjBKbAphVXBwYm1jeEREQUtCZ05WQkFvVEEyczRjekVQTUEwR0ExVUVDeE1HVTNsemRHVnRNUmd3RmdZRFZRUURFdzlqCmJIVnpkR1Z5TFhKdmIzUXRZMkV3SGhjTk1UY3dPVEUyTURBME9EQXdXaGNOTWpJd09URTFNREEwT0RBd1dqQnEKTVFzd0NRWURWUVFHRXdKRFRqRVFNQTRHQTFVRUNCTUhRbVZwU21sdVp6RVFNQTRHQTFVRUJ4TUhRbVZwU21sdQpaekVNTUFvR0ExVUVDaE1EYXpoek1ROHdEUVlEVlFRTEV3WlRlWE4wWlcweEdEQVdCZ05WQkFNVEQyTnNkWE4wClpYSXRjbTl2ZEMxallUQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU5ManRZaHkKdktCdjBmV1ZILy9sWnY1SHV6SmxUMUVRSUpzTTJJaTFvYTcrc01MTmZack9JNWZDY1lscU81empLVy9UVmlZdgord1hBbkJaaXRnUy9wMlJYQmNNRzZxZ3cxNzVHd0tNbUR5UElaMTBuc1ErYWxjdUdEQnhNdVNHZHVQTk12K3hUCnhhYndOR1JaRFZXZkUzNS81cDYwaGZaSndCTnlQZ25aQkFCNnV4aVN0dkZvVHJUajhxV2pMbTFKbnlQUTZOcXIKUk5RWWxjUXQrUm1PKy9LZm1YSGFmUEh1VFRqUkw5cHB4VS9WaVFKWVVpcFZsaHhnQXU0R0p0YVhkLzhpakswaApMa2FscXdCVnFiTTVYa0FmY0lwbVBLdmk5bi93c29sMFdlWmlaaG9ha3BRbjR6bGp1dFEwUEtCUnVHSDcvVU9wCjNDK3hTOThHa1JDNVFoMENBd0VBQWFObU1HUXdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CSUdBMVVkRXdFQi93UUkKTUFZQkFmOENBUUl3SFFZRFZSME9CQllFRlBDQVJLZWVWL2ZxM3hicXJPNm96cm5WNkRkU01COEdBMVVkSXdRWQpNQmFBRlBDQVJLZWVWL2ZxM3hicXJPNm96cm5WNkRkU01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQWNkMjdhClp5dWNENWh4N3NHNVovcnN5OCtHTGdjeGtmcEg4Q1J0VVg0L1d3YXlleVhMbHNSNDVlVGRPUGtHbXZaYngrYVYKc0xwd3VjZ3ZuRUh4VWtvS29jeHR5RUwrYUhSOHhnVHdZbmtxQ3pPY0RzZE9DV0dvY1B2WXdiViszWFVCZ1pQcgpEK1FESkhZTHlkeTRNdUVyVmpQNm5veDRzU3BUa2VzUE9uUkFSNWIwTGxYeVhFVldkdnNEdXEreWFYbm9aUVN6CjdXemo5T2F5Mmc4SFFqbGszcndoVlB2UExOUUtCMEJQdUU1aDBGMjVKMDhjcmhUcUdpLzRoTEFmbWxxSEVuVUwKeGJ3NjFqZGthblI3MmhZem5mM1dxRWp6RXcyc3lsRUxaVUR3VU1ySEJja1ZndzhUYStDalJuUHNRWjV4ZjFZcwpRNUJUd2ZEdTRDRFpiLzBCCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
---

# This manifest installs the calico/node container, as well
# as the Calico CNI plugins and network config on
# each master and worker node in a Kubernetes cluster.
kind: DaemonSet
apiVersion: extensions/v1beta1
metadata:
  name: calico-node
  namespace: kube-system
  labels:
    k8s-app: calico-node
spec:
  selector:
    matchLabels:
      k8s-app: calico-node
  template:
    metadata:
      labels:
        k8s-app: calico-node
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
        scheduler.alpha.kubernetes.io/tolerations: |
          [{"key": "dedicated", "value": "master", "effect": "NoSchedule" },
           {"key":"CriticalAddonsOnly", "operator":"Exists"}]
    spec:
      hostNetwork: true
      serviceAccountName: calico-node
      containers:
        # Runs calico/node container on each Kubernetes node.  This
        # container programs network policy and routes on each
        # host.
        - name: calico-node
          image: quay.io/calico/node:v1.3.0
          env:
            # The location of the Calico etcd cluster.
            - name: ETCD_ENDPOINTS
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_endpoints
            # Choose the backend to use.
            - name: CALICO_NETWORKING_BACKEND
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: calico_backend
            # Disable file logging so `kubectl logs` works.
            - name: CALICO_DISABLE_FILE_LOGGING
              value: "true"
            # Set Felix endpoint to host default action to ACCEPT.
            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION
              value: "ACCEPT"
            # Configure the IP Pool from which Pod IPs will be chosen.
            - name: CALICO_IPV4POOL_CIDR
              value: "172.30.0.0/16"
            - name: CALICO_IPV4POOL_IPIP
              value: "always"
            # Disable IPv6 on Kubernetes.
            - name: FELIX_IPV6SUPPORT
              value: "false"
            # Set Felix logging to "info"
            - name: FELIX_LOGSEVERITYSCREEN
              value: "info"
            # Location of the CA certificate for etcd.
            - name: ETCD_CA_CERT_FILE
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_ca
            # Location of the client key for etcd.
            - name: ETCD_KEY_FILE
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_key
            # Location of the client certificate for etcd.
            - name: ETCD_CERT_FILE
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_cert
            # Auto-detect the BGP IP address.
            - name: IP
              value: ""
          securityContext:
            privileged: true
          resources:
            requests:
              cpu: 250m
          volumeMounts:
            - mountPath: /lib/modules
              name: lib-modules
              readOnly: true
            - mountPath: /var/run/calico
              name: var-run-calico
              readOnly: false
            - mountPath: /calico-secrets
              name: etcd-certs
        # This container installs the Calico CNI binaries
        # and CNI network config file on each node.
        - name: install-cni
          image: quay.io/calico/cni:v1.9.1
          command: ["/install-cni.sh"]
          env:
            # The location of the Calico etcd cluster.
            - name: ETCD_ENDPOINTS
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_endpoints
            # The CNI network config to install on each node.
            - name: CNI_NETWORK_CONFIG
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: cni_network_config
          volumeMounts:
            - mountPath: /host/opt/cni/bin
              name: cni-bin-dir
            - mountPath: /host/etc/cni/net.d
              name: cni-net-dir
            - mountPath: /calico-secrets
              name: etcd-certs
      volumes:
        # Used by calico/node.
        - name: lib-modules
          hostPath:
            path: /lib/modules
        - name: var-run-calico
          hostPath:
            path: /var/run/calico
        # Used to install CNI.
        - name: cni-bin-dir
          hostPath:
            path: /opt/cni/bin
        - name: cni-net-dir
          hostPath:
            path: /etc/cni/net.d
        # Mount in the etcd TLS secrets.
        - name: etcd-certs
          secret:
            secretName: calico-etcd-secrets

---

# This manifest deploys the Calico policy controller on Kubernetes.
# See https://github.com/projectcalico/k8s-policy
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: calico-policy-controller
  namespace: kube-system
  labels:
    k8s-app: calico-policy
  annotations:
    scheduler.alpha.kubernetes.io/critical-pod: ''
    scheduler.alpha.kubernetes.io/tolerations: |
      [{"key": "dedicated", "value": "master", "effect": "NoSchedule" },
       {"key":"CriticalAddonsOnly", "operator":"Exists"}]
spec:
  # The policy controller can only have a single active instance.
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      name: calico-policy-controller
      namespace: kube-system
      labels:
        k8s-app: calico-policy
    spec:
      # The policy controller must run in the host network namespace so that
      # it isn't governed by policy that would prevent it from working.
      hostNetwork: true
      serviceAccountName: calico-policy-controller
      containers:
        - name: calico-policy-controller
          image: quay.io/calico/kube-policy-controller:v0.6.0
          env:
            # The location of the Calico etcd cluster.
            - name: ETCD_ENDPOINTS
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_endpoints
            # Location of the CA certificate for etcd.
            - name: ETCD_CA_CERT_FILE
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_ca
            # Location of the client key for etcd.
            - name: ETCD_KEY_FILE
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_key
            # Location of the client certificate for etcd.
            - name: ETCD_CERT_FILE
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_cert
            # The location of the Kubernetes API.  Use the default Kubernetes
            # service for API access.
            - name: K8S_API
              value: "https://kubernetes.default:443"
            # Since we're running in the host namespace and might not have KubeDNS
            # access, configure the container's /etc/hosts to resolve
            # kubernetes.default to the correct service clusterIP.
            - name: CONFIGURE_ETC_HOSTS
              value: "true"
          volumeMounts:
            # Mount in the etcd TLS secrets.
            - mountPath: /calico-secrets
              name: etcd-certs
      volumes:
        # Mount in the etcd TLS secrets.
        - name: etcd-certs
          secret:
            secretName: calico-etcd-secrets

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: calico-policy-controller
  namespace: kube-system

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: calico-node
  namespace: kube-system

